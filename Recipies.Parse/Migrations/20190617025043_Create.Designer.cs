// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipies.Parse._101JuiceRecipies;

namespace Recipies.Parse.Migrations
{
    [DbContext(typeof(JuiceRecipieContext))]
    [Migration("20190617025043_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Recipies.Core.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Recipies.Core.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Unit");

                    b.HasKey("IngredientId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Recipies.Core.Models.Recipie", b =>
                {
                    b.Property<int>("RecipieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<bool>("Fruit");

                    b.Property<string>("ImgName");

                    b.Property<string>("Instructions")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("PostWorkout");

                    b.Property<bool>("Quick");

                    b.Property<bool>("Reboot");

                    b.HasKey("RecipieId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipies");
                });

            modelBuilder.Entity("Recipies.Core.Models.RecipieIngredient", b =>
                {
                    b.Property<int>("RecipieId");

                    b.Property<int>("IngredientId");

                    b.Property<bool>("Optional");

                    b.Property<double>("Qty");

                    b.HasKey("RecipieId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipieIngredients");
                });

            modelBuilder.Entity("Recipies.Core.Models.Recipie", b =>
                {
                    b.HasOne("Recipies.Core.Models.Category", "Category")
                        .WithMany("Recipies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Recipies.Core.Models.RecipieIngredient", b =>
                {
                    b.HasOne("Recipies.Core.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Recipies.Core.Models.Recipie", "Recipie")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
