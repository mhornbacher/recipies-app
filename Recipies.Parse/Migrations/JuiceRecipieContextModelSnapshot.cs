// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipies.Parse._101JuiceRecipies;

namespace Recipies.Parse.Migrations
{
    [DbContext(typeof(JuiceRecipieContext))]
    partial class JuiceRecipieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Recipies.Core.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Label")
                        .IsRequired();

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Recipies.Core.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Label")
                        .IsRequired();

                    b.Property<string>("Unit")
                        .IsRequired();

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Recipies.Core.Models.Nutrition", b =>
                {
                    b.Property<int>("NutritionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Calories");

                    b.Property<int>("Carbohydrate");

                    b.Property<int>("Fat");

                    b.Property<int>("Fiber");

                    b.Property<int>("Kilojoules");

                    b.Property<int>("Protein");

                    b.Property<int>("Sodium");

                    b.Property<int>("Sugars");

                    b.Property<int>("TransFat");

                    b.HasKey("NutritionId");

                    b.ToTable("Nutritions");
                });

            modelBuilder.Entity("Recipies.Core.Models.Recipie", b =>
                {
                    b.Property<int>("RecipieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryForeignKey");

                    b.Property<string>("Description");

                    b.Property<string>("ImgName");

                    b.Property<string>("Instructions");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("NutritionId");

                    b.HasKey("RecipieId");

                    b.HasIndex("CategoryForeignKey");

                    b.HasIndex("NutritionId");

                    b.ToTable("Recipies");
                });

            modelBuilder.Entity("Recipies.Core.Models.RecipieIngredient", b =>
                {
                    b.Property<int>("RecipieIngredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IngredientForeignKey");

                    b.Property<int>("IngredientId");

                    b.Property<string>("Label");

                    b.Property<double>("Qty");

                    b.Property<int>("RecipieForeignKey");

                    b.Property<string>("Unit");

                    b.HasKey("RecipieIngredientId");

                    b.HasIndex("IngredientForeignKey");

                    b.HasIndex("RecipieForeignKey");

                    b.ToTable("RecipieIngredients");
                });

            modelBuilder.Entity("Recipies.Core.Models.Recipie", b =>
                {
                    b.HasOne("Recipies.Core.Models.Category", "Category")
                        .WithMany("Recipies")
                        .HasForeignKey("CategoryForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Recipies.Core.Models.Nutrition", "Nutrition")
                        .WithMany()
                        .HasForeignKey("NutritionId");
                });

            modelBuilder.Entity("Recipies.Core.Models.RecipieIngredient", b =>
                {
                    b.HasOne("Recipies.Core.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Recipies.Core.Models.Recipie", "Recipie")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipieForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
